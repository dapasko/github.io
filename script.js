// Preloader
window.addEventListener('load', () => {
    document.querySelector('.preloader').style.display = 'none';
});

// Mobile Menu
document.querySelector('.menu-toggle').addEventListener('click', () => {
    document.querySelector('.nav').classList.toggle('active');
});

// Smooth Scroll
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        document.querySelector(this.getAttribute('href')).scrollIntoView({
            behavior: 'smooth'
        });
    });
});

// Scroll Animation (AOS)
AOS.init({
    duration: 1000,
    once: true
});

// Scroll to Top
window.addEventListener('scroll', () => {
    const scrollTop = document.querySelector('.scroll-top');
    if (window.scrollY > 500) {
        scrollTop.classList.add('show');
    } else {
        scrollTop.classList.remove('show');
    }
});

document.querySelector('.scroll-top').addEventListener('click', () => {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
});

// Services Data
const servicesData = [
    { title: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ–º–æ–≤', icon: 'üè†', description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —á–∞—Å—Ç–Ω—ã—Ö –¥–æ–º–æ–≤' },
    { title: '–†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä', icon: 'üõ†Ô∏è', description: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π –∏ –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç' },
    { title: '–î–∏–∑–∞–π–Ω –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤', icon: 'üé®', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤' },
    { title: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã', icon: '‚öôÔ∏è', description: '–ú–æ–Ω—Ç–∞–∂ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–µ—Ç–µ–π' }
];

// Render Services
const servicesGrid = document.querySelector('.services-grid');
servicesData.forEach(service => {
    servicesGrid.innerHTML += `
        <div class="service-card" data-aos="zoom-in">
            <div class="service-icon">${service.icon}</div>
            <h3>${service.title}</h3>
            <p>${service.description}</p>
        </div>
    `;
});

// Portfolio Data
const portfolioData = [
    { 
        category: 'house',
        image: 'https://images.unsplash.com/photo-1605276374104-dee2a0ed3cd6',
        title: '–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω, 250 –º¬≤'
    },
    {
        category: 'apartment',
        image: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7',
        title: '–õ–æ—Ñ—Ç-–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã',
        description: '–ú–æ—Å–∫–≤–∞, 120 –º¬≤'
    },
    {
        category: 'commercial',
        image: 'https://images.unsplash.com/photo-1600596542815-ffad4c1539a9',
        title: '–ë–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä',
        description: '–°—Ç–µ–∫–ª–æ –∏ –±–µ—Ç–æ–Ω, 5000 –º¬≤'
    },
    {
        category: 'house',
        image: 'https://images.unsplash.com/photo-1564013799919-ab600027ffc6',
        title: '–≠–∫–æ–¥–æ–º',
        description: '–ö–∞—Ä–∫–∞—Å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è'
    },
    {
        category: 'apartment',
        image: 'https://images.unsplash.com/photo-1556911220-bff31c812dba',
        title: '–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è –∫—É—Ö–Ω—è',
        description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç'
    }
];

// Render Portfolio
const portfolioGrid = document.querySelector('.portfolio-grid');
portfolioData.forEach(item => {
    portfolioGrid.innerHTML += `
        <div class="portfolio-item" data-category="${item.category}">
            <img src="${item.image}" alt="${item.title}">
            <div class="portfolio-overlay">
                <h3>${item.title}</h3>
                <p>${item.description}</p>
            </div>
        </div>
    `;
});

// Portfolio Filter
const filterBtns = document.querySelectorAll('.filter-btn');
let portfolioItems = document.querySelectorAll('.portfolio-item');

filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
        filterBtns.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        
        const filter = btn.dataset.filter;
        portfolioItems.forEach(item => {
            item.style.display = (filter === 'all' || item.dataset.category === filter) 
                ? 'block' 
                : 'none';
        });
    });
});

// Form Submission
document.querySelector('.contact-form').addEventListener('submit', function(e) {
    e.preventDefault();
    alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.');
    this.reset();
});